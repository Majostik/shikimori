package com.shikimori.features.anime.data.repository

import com.shikimori.core.domain.model.Anime
import com.shikimori.core.utils.Logger
import com.shikimori.features.anime.data.remote.AnimeApi
import com.shikimori.features.anime.domain.repository.AnimeRepository

class AnimeRepositoryImpl(
    private val animeApi: AnimeApi
) : AnimeRepository {
    
    override suspend fun getAnimes(
        page: Int,
        limit: Int,
        search: String?
    ): Result<List<Anime>> {
        return try {
            Logger.d("AnimeRepository", "üöÄ –ó–∞–ø—Ä–æ—Å –∞–Ω–∏–º–µ - page=$page, limit=$limit, search=$search")
            val animes = animeApi.getAnimes(
                page = page,
                limit = limit,
                search = search
            )
            Logger.d("AnimeRepository", "‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${animes.size} –∞–Ω–∏–º–µ")
            Result.success(animes)
        } catch (e: Exception) {
            Logger.e("AnimeRepository", "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∞–Ω–∏–º–µ: ${e.message}", e)
            Logger.d("AnimeRepository", "üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: ${e.stackTraceToString()}")
            Result.failure(e)
        }
    }
} 